{"version":3,"file":"static/js/831.dc3bf682.chunk.js","mappings":"sVAOIA,GAASC,EAAAA,EAAAA,IAAW,SAACC,EAAOC,GAAR,OAAgCC,EAAAA,EAAAA,KAAIC,EAAAA,GAAD,QAAC,QAASC,MAAO,UAAaJ,GAA9B,IAAqCK,UAAW,MAAOJ,IAAAA,IAA1F,IACxBH,EAAOQ,YAAc,S,wHCEjBC,GAAOR,EAAAA,EAAAA,IAAW,SAAeC,EAAOC,GAC1C,IAAMO,GAASC,EAAAA,EAAAA,IAAe,OAAQT,GACtC,GAA0DU,EAAAA,EAAAA,IAAiBV,GAA1BW,GAAjD,EAAQC,UAAR,EAAmBR,MAAnB,EAA0BS,WAA1B,EAAsCC,QAAtC,aACMC,GAAeC,EAAAA,EAAAA,IAAQ,CAC3BC,UAAWjB,EAAMI,MACjBc,eAAgBlB,EAAMa,WACtBM,cAAenB,EAAMc,SAEvB,OAAuBZ,EAAAA,EAAAA,KACrBkB,EAAAA,EAAAA,GADwB,QAAC,gBAGvBnB,IAAAA,EACAW,WAAWS,EAAAA,EAAAA,IAAG,cAAerB,EAAMY,YAChCG,GACAJ,GANmB,IAOtBW,MAAOd,IAGZ,IACDD,EAAKD,YAAc,O,cCPNiB,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,WACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAOC,QAAQ,IAAf,WACE,UAAC,IAAD,CAAQC,GAAG,KAAKD,QAAQ,IAAIE,GAAG,IAA/B,WACE,SAAC,IAAD,KACA,SAAC,IAAD,CACED,GAAG,KACHE,WAAW,MACXC,SAAS,OACTC,cAAc,SAJhB,sCASF,SAAC,IAAD,CACEC,GAAG,UACHC,QAAQ,UACRC,YAAY,UACZC,KAAK,QAJP,UAME,SAAC,IAAD,WACE,iBAAMC,SAjCG,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfhB,GACEiB,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAuByCC,aAAa,MAA3C,UACE,UAAC,IAAD,CAAOrB,QAAQ,IAAf,WACE,UAAC,KAAD,CAAasB,YAAU,EAAvB,WACE,SAAC,IAAD,CAAWC,KAAK,KAAhB,2BACA,SAAC,EAAAC,EAAD,CACEC,YAAY,QACZC,KAAK,QACLC,KAAK,QACLrB,GAAG,QACHE,YAAY,UACZe,KAAK,KACLK,aAAa,YAGjB,UAAC,KAAD,CAAaN,YAAU,EAAvB,WACE,SAAClD,EAAD,CAAQyD,QAAQ,gBAAhB,UACE,UAAC,IAAD,CAAWN,KAAK,KAAhB,sBAEE,SAAC,IAAD,CACEtB,GAAG,IACH6B,KAAK,IACLvB,QAAQ,OACRgB,KAAK,KACLQ,MAAM,UACN5B,WAAW,MANb,oCAYJ,SAAC,EAAAqB,EAAD,CACEC,YAAY,WACZC,KAAK,WACLC,KAAK,WACLrB,GAAG,QACHE,YAAY,UACZe,KAAK,KACLK,aAAa,YAGjB,SAAC,IAAD,CACEF,KAAK,SACLpB,GAAG,UACHyB,MAAM,QACNR,KAAK,KACLS,OAAQ,CAAE1B,GAAI,WACd2B,QAAS,CAAE3B,GAAI,WANjB,+BAcR,SAAC,IAAD,CAAMC,QAAQ,UAAUC,YAAY,UAApC,UACE,SAAC,IAAD,WACE,SAAC,IAAD,WACE,UAACpC,EAAD,CAAQgC,SAAS,KAAKJ,QAAQ,IAA9B,WACE,SAACnB,EAAD,kCACA,SAAC,KAAD,CAAMqD,MAAO,CAAEH,MAAO,QAAUI,GAAG,YAAnC,+CAWjB,EC5Hc,SAASC,IACtB,OACE,4BACE,sCACF,SAACvC,EAAD,MAGH,C","sources":["../node_modules/@chakra-ui/layout/dist/chunk-HUQHYERK.mjs","../node_modules/@chakra-ui/layout/dist/chunk-P74GIWPW.mjs","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import {\n  Stack\n} from \"./chunk-O5CRURSQ.mjs\";\n\n// src/stack/h-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar HStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"row\", ref }));\nHStack.displayName = \"HStack\";\n\nexport {\n  HStack\n};\n","// src/text.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { compact } from \"@chakra-ui/object-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Text = forwardRef(function Text2(props, ref) {\n  const styles = useStyleConfig(\"Text\", props);\n  const { className, align, decoration, casing, ...rest } = omitThemingProps(props);\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */ jsx(\n    chakra.p,\n    {\n      ref,\n      className: cx(\"chakra-text\", props.className),\n      ...aliasedProps,\n      ...rest,\n      __css: styles\n    }\n  );\n});\nText.displayName = \"Text\";\n\nexport {\n  Text\n};\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {Link} from 'react-router-dom'\n//import { Form } from './LoginForm.styled';\nimport {\n  Box,\n  Heading,\n  VStack,\n  Card,\n  FormControl,\n  FormLabel,\n  Input,\n  HStack,\n  Button,\n  Stack,\n  CardBody,\n  Text,\n  \n  Center,\n} from '@chakra-ui/react';\nimport { PhonebookLogo } from 'phonebook-logo';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n  return (\n    <Box>\n      <Center>\n        <Stack spacing=\"4\">\n          <VStack as=\"h1\" spacing=\"6\" mt=\"8\">\n            <PhonebookLogo />\n            <Heading\n              as=\"h1\"\n              fontWeight=\"300\"\n              fontSize=\"24px\"\n              letterSpacing=\"-0.5px\"\n            >\n              Sign in to Phonebook\n            </Heading>\n          </VStack>\n          <Card\n            bg=\"#f6f8fa\"\n            variant=\"outline\"\n            borderColor=\"#d8dee4\"\n            maxW=\"385px\"\n          >\n            <CardBody>\n              <form onSubmit={handleSubmit} autoComplete=\"off\">\n                <Stack spacing=\"4\">\n                  <FormControl isRequired>\n                    <FormLabel size=\"sm\">Email addres</FormLabel>\n                    <Input\n                      placeholder=\"Email\"\n                      type=\"email\"\n                      name=\"email\"\n                      bg=\"white\"\n                      borderColor=\"#d8dee4\"\n                      size=\"sm\"\n                      borderRadius=\"6px\"\n                    />\n                  </FormControl>\n                  <FormControl isRequired>\n                    <HStack justify=\"space-between\">\n                      <FormLabel size=\"sm\">\n                        Password\n                        <Button\n                          as=\"a\"\n                          href=\"#\"\n                          variant=\"link\"\n                          size=\"xs\"\n                          color=\"#0969da\"\n                          fontWeight=\"500\"\n                        >\n                          Forgot password?\n                        </Button>\n                      </FormLabel>\n                    </HStack>\n                    <Input\n                      placeholder=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      bg=\"white\"\n                      borderColor=\"#d8dee4\"\n                      size=\"sm\"\n                      borderRadius=\"6px\"\n                    />\n                  </FormControl>\n                  <Button\n                    type=\"submit\"\n                    bg=\"#2da44e\"\n                    color=\"white\"\n                    size=\"sm\"\n                    _hover={{ bg: '#2c974b' }}\n                    _active={{ bg: '#298e46' }}\n                  >\n                    Sign in\n                  </Button>\n                </Stack>\n              </form>\n            </CardBody>\n          </Card>\n          <Card variant=\"outline\" borderColor=\"#d0d7de\">\n            <CardBody>\n              <Center>\n                <HStack fontSize=\"sm\" spacing=\"1\">\n                  <Text>New to Phonebook? </Text>\n                  <Link style={{ color: 'blue' }} to=\"/register\">\n                    Create an account.\n                  </Link>\n                </HStack>\n              </Center>\n            </CardBody>\n          </Card>\n        </Stack>\n      </Center>\n    </Box>\n  );\n};\n","import { LoginForm } from \"components/LoginForm/LoginForm\";\n\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n    <LoginForm/>\n    </div>\n  );\n}\n"],"names":["HStack","forwardRef","props","ref","jsx","Stack","align","direction","displayName","Text","styles","useStyleConfig","omitThemingProps","rest","className","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","chakra","cx","__css","LoginForm","dispatch","useDispatch","spacing","as","mt","fontWeight","fontSize","letterSpacing","bg","variant","borderColor","maxW","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","isRequired","size","I","placeholder","type","name","borderRadius","justify","href","color","_hover","_active","style","to","Login"],"sourceRoot":""}