{"version":3,"file":"static/js/415.f1bfead1.chunk.js","mappings":"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","sources":["pages/Home.jsx","../node_modules/@chakra-ui/layout/dist/chunk-3V5HNFOM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-MUMUYFOI.mjs","../node_modules/@chakra-ui/layout/dist/chunk-AMDSPU3E.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-V4DIVZKN.mjs","../node_modules/@chakra-ui/layout/dist/chunk-O5CRURSQ.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["import { Box, Center, VStack, Heading } from '@chakra-ui/react';\n\nexport default function Home() {\n  return (\n    <Box>\n      <Center>\n        <VStack>\n           <Heading\n            as=\"h1\"\n            backgroundImage=\"conic-gradient(rgb(85, 60, 154), rgb(238, 75, 43), rgb(0, 194, 203), rgb(85, 60, 154))\"\n            color=\"transparent\"\n            backgroundClip=\"text\"\n            textAlign = 'center'\n          >\n            Create your own Phone book\n          </Heading>\n        </VStack>\n      </Center>\n    </Box>\n  );\n}\n","// src/center.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = forwardRef(\n  function AbsoluteCenter2(props, ref) {\n    const { axis = \"both\", ...rest } = props;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        __css: centerStyles[axis],\n        ...rest,\n        position: \"absolute\"\n      }\n    );\n  }\n);\n\nexport {\n  Center,\n  AbsoluteCenter\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","import {\n  Stack\n} from \"./chunk-O5CRURSQ.mjs\";\n\n// src/stack/v-stack.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport {\n  VStack\n};\n","// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nvar selector = \"& > *:not(style) ~ *:not(style)\";\nfunction getStackStyles(options) {\n  const { spacing, direction } = options;\n  const directionStyles = {\n    column: {\n      marginTop: spacing,\n      marginEnd: 0,\n      marginBottom: 0,\n      marginStart: 0\n    },\n    row: { marginTop: 0, marginEnd: 0, marginBottom: 0, marginStart: spacing },\n    \"column-reverse\": {\n      marginTop: 0,\n      marginEnd: 0,\n      marginBottom: spacing,\n      marginStart: 0\n    },\n    \"row-reverse\": {\n      marginTop: 0,\n      marginEnd: spacing,\n      marginBottom: 0,\n      marginStart: 0\n    }\n  };\n  return {\n    flexDirection: direction,\n    [selector]: mapResponsive(\n      direction,\n      (value) => directionStyles[value]\n    )\n  };\n}\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  selector,\n  getStackStyles,\n  getDividerStyles\n};\n","import {\n  StackItem\n} from \"./chunk-AMDSPU3E.mjs\";\nimport {\n  getDividerStyles,\n  getStackStyles,\n  selector\n} from \"./chunk-V4DIVZKN.mjs\";\n\n// src/stack/stack.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const styles = useMemo(\n    () => getStackStyles({ direction, spacing }),\n    [direction, spacing]\n  );\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: styles.flexDirection,\n      flexWrap: wrap,\n      className: _className,\n      __css: hasDivider ? {} : { [selector]: styles[selector] },\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["Home","as","backgroundImage","color","backgroundClip","textAlign","Center","chakra","baseStyle","display","alignItems","justifyContent","displayName","centerStyles","horizontal","insetStart","transform","vertical","top","both","forwardRef","props","ref","axis","rest","jsx","__css","position","Heading","styles","useStyleConfig","omitThemingProps","className","cx","VStack","Stack","align","direction","StackItem","flex","minWidth","Object","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","key","selector","isInline","directionProp","justify","spacing","wrap","children","divider","shouldWrapChildren","useMemo","options","directionStyles","column","marginTop","marginEnd","marginBottom","marginStart","row","flexDirection","value","getStackStyles","dividerStyle","dividerStyles","my","mx","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","Children","filter","child","isValidElement","getValidChildren","index","isLast","length","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","flexWrap"],"sourceRoot":""}